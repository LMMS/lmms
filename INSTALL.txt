Building LMMS got quite simple since 0.4.0 as everything is managed
by cmake now. Therefore make sure you have CMake (>= 2.6.0 recommended) and
then run


mkdir build
cd build
cmake ../
make
sudo make install

If your system does not have "sudo", become root with your preferred mechanism
and run the "make install" command.

With the above commands an out-of-tree build is performed. You can also run
"cmake ." directly in the root of source tree although this is not recommended.
When performing an out-of-tree build after there's already an in-tree build,
make sure to run "make distclean" before running cmake inside build-directory.

If you want to use custom compiler flags simply set the environment variables
CFLAGS and CXXFLAGS.

After running cmake (the 3rd command above) you can see a summary of things
that are going to be built into LMMS or built as plugins. Install the
according libraries and development files if a certain feature is not enabled.
Then remove CMakeCache.txt and run cmake again.

If you want to supply an install prefix to cmake, add the flag:

-DCMAKE_INSTALL_PREFIX=<prefix>

Where <prefix> can be /usr, /usr/local, /opt, etc. The default is /usr/local.



Building with QT5

First of all please note that CMake >= 2.8.11 is required for building with
Qt5 support. In order to build LMMS with Qt5, add the following flag when
invoking cmake:

-DWANT_QT5=ON

If your Qt5 installation does not reside in standard installation paths,
additionally pass e.g.

-DCMAKE_PREFIX_PATH=/opt/qt53/

