version: 2

shared:
  restore_cache: &restore_cache
    restore_cache:
      keys:
        - ccache-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}
        - ccache-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
        - ccache-{{ arch }}
  save_cache: &save_cache
    save_cache:
      key: ccache-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ .BuildNum }}
      paths:
        - ~/.ccache

  ccache_stats: &ccache_stats
    run:
      name: Print ccache statistics
      command: |
        echo "[ccache config]"
        ccache -p
        echo "[ccache stats]"
        ccache -s

  # Commmon initializing commands
  init: &init
    run:
      name: Initialize
      command: |
        mkdir -p /tmp/artifacts
        # Workaround for failing submodule fetching
        git config --global --unset url."ssh://git@github.com".insteadOf || true

  # Commmon environment variables
  common_environment: &common_environment
    QT5: True
    CMAKE_OPTS: -DUSE_WERROR=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUSE_CCACHE=ON
    CCACHE_MAXSIZE: 500M
    CCACHE_LOGFILE: /tmp/artifacts/ccache.log
    MAKEFLAGS: -j6

jobs:
  mingw32:
    environment:
      <<: *common_environment
    docker:
      - image: lmmsci/linux.mingw32:18.04
    steps:
      - checkout
      - *init
      - *restore_cache
      - run:
          name: Building
          command: |
            mkdir build && cd build
            ../cmake/build_win32.sh
            make lmms
            make
      - run:
          name: Build tests
          command: cd build && make tests
      - run:
          name: Build installer
          command: |
            cd build
            make package
            cp ./lmms-*.exe /tmp/artifacts/
      - store_artifacts:
          path: /tmp/artifacts/
          destination: /
      - *ccache_stats
      - *save_cache
  mingw64:
    environment:
      <<: *common_environment
    docker:
      - image: lmmsci/linux.mingw64:18.04
    steps:
      - checkout
      - *init
      - *restore_cache
      - run:
          name: Building
          command: |
            mkdir build && cd build
            ../cmake/build_win64.sh
            make
      - run:
          name: Build tests
          command: cd build && make tests
      - run:
          name: Build installer
          command: |
            cd build
            make package
            cp ./lmms-*.exe /tmp/artifacts/
      - store_artifacts:
          path: /tmp/artifacts/
          destination: /
      - *ccache_stats
      - *save_cache
  linux.gcc:
    docker:
      - image: lmmsci/linux.gcc:xenial
    environment:
      <<: *common_environment
    steps:
      - checkout
      - *init
      - *restore_cache
      - run:
          name: Configure
          command: mkdir build && cd build && cmake .. $CMAKE_OPTS -DCMAKE_INSTALL_PREFIX=./install
      - run:
          name: Build
          command: cd build && make
      - run:
          name: Build tests
          command: cd build && make tests
      - run:
          name: Run tests
          command: build/tests/tests
      - *ccache_stats
      - run:
          name: Build AppImage
          command: |
            cd build
            make install
            make appimage || (cat appimage.log && false)
            cp ./lmms-*.AppImage /tmp/artifacts/
      - store_artifacts:
          path: /tmp/artifacts/
          destination: /
      - store_artifacts:
          path: build/appimage.log
          destination: /
      - *save_cache
  shellcheck:
    docker:
      - image: koalaman/shellcheck-alpine:v0.4.6
    steps:
      - checkout
      - run:
          name: Shellcheck
          command: shellcheck $(find "./cmake/" -type f -name '*.sh' -o -name "*.sh.in")
workflows:
  version: 2
  build-and-test:
    jobs:
      - mingw32
      - mingw64
      - linux.gcc
      - shellcheck
