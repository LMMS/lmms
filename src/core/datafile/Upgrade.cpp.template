/*
 * Delete these instructions when finished:
 *  + Replace CLASS_NAME_GUARD with the ALLUPPERCASE name of the class.
 *  + Replace CLASS_NAME with the CamelCase name of the class.
 *  + Replace BLURB with a blurb about what this upgrade routine does.
 *  + Replace __TAG__ with the tag name you want to operate on.
 *
 * CLASS_NAME.cpp
 *   Functor for upgrading data files BLURB
 *
 * This file is part of LMMS - https://lmms.io
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with this program (see COPYING); if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301 USA.
 *
 */

#include "datafile/CLASS_NAME.h"


namespace lmms
{


void CLASS_NAME::upgrade_helper()
{
}


void CLASS_NAME::upgrade()
{
	m_elements = m_docment.elementsByTagName( "__TAG__" );
	for (int i = 0; i < m_elements.length(); ++i)
	{
		QDomElement el = m_elements.item(i).toElement();
		if (el.isNull()) { continue; }
		// do something to each element "el"
	}

	upgrade_helper();
}


} // namespace lmms
