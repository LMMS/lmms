#!/usr/bin/env bash
# Creates Linux ".AppImage" for @PROJECT_NAME_UCASE@

set -e

# Console colors
RED="\\x1B[1;31m"
GREEN="\\x1B[1;32m"
YELLOW="\\x1B[1;33m"
PLAIN="\\x1B[0m"

LINUXDEPLOYQT="$HOME/bin/linuxdeployqt"
APPDIR="@CMAKE_BINARY_DIR@/@PROJECT_NAME_UCASE@.AppDir/"

mkdir -p "$HOME/bin"

	echo -e "${GREEN}Downloading linuxdeployqt to ${LINUXDEPLOYQT}${PLAIN}..."
# Fetch portable linuxdeployqt if cache is older than 10 days
if which linuxdeployqt > /dev/null 2>&1; then
	echo "     [skipping] The system already provides this utility"
elif ! find "$LINUXDEPLOYQT" -mtime -10  > /dev/null 2>&1; then
	url="https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-$(uname -p).AppImage"
	echo "     Trying ($(uname -p)): ${url}"
	wget "$url" -O "$LINUXDEPLOYQT" -q || rm "$LINUXDEPLOYQT" && false
	chmod +x "$LINUXDEPLOYQT"
	echo "     [success]"
else
	echo "     [skipping] Downloaded version is less than 10 days old"
fi

# Make skeleton AppDir
echo -e "${GREEN}Creating ${APPDIR}...${PLAIN}"
rm -rf "$APPDIR"
mkdir -p "$APPDIR/usr"
echo "     [success]"

# Clone install to AppDir
echo -e "${GREEN}Copying @CMAKE_INSTALL_PREFIX@ to ${APPDIR}...${PLAIN}"
cp -R "@CMAKE_INSTALL_PREFIX@/." "$APPDIR/usr"
echo "     [success]"

# Fix Zyn linking
mv "$APPDIR/usr/lib/@CMAKE_PROJECT_NAME@/RemoteZynAddSubFx" "$APPDIR/usr/bin"

echo -e "${GREEN}Bundling dependencies...${PLAIN}"
# Bundle both qt and non-qt dependencies into appimage format
"$LINUXDEPLOYQT" "$APPDIR/usr/share/applications/@CMAKE_PROJECT_NAME@.desktop" -executable="$APPDIR/usr/bin/RemoteZynAddSubFx" -bundle-non-qt-libs
echo "     [success]"

echo -e "${GREEN}Finishing the AppImage...${PLAIN}"
# Run a second time with appimage flag to fix liking
"$LINUXDEPLOYQT" "$APPDIR/usr/share/applications/@CMAKE_PROJECT_NAME@.desktop" -executable="$APPDIR/usr/lib/@CMAKE_PROJECT_NAME@/RemoteZynAddSubFx" -appimage
echo "     [success]"

echo -e "${GREEN}Moving to @APPIMAGE_FILE@...${PLAIN}"
mv *.AppImage "@APPIMAGE_FILE@"

echo -e "${GREEN}Finished${PLAIN}"
