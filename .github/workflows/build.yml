name: build
on: [push, pull_request]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  linux:
    name: linux
    runs-on: ubuntu-18.04
    container: lmmsci/linux.gcc:18.04
    env:
      CMAKE_OPTS: -DUSE_WERROR=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo
      MAKEFLAGS: -j2
    steps:
    - name: Update and configure Git
      run: |
        add-apt-repository ppa:git-core/ppa
        apt-get update
        apt-get --yes install git
        git config --global --add safe.directory /__w/lmms/lmms
    - name: Check out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Configure
      run: |
        source /opt/qt5*/bin/qt5*-env.sh || true
        mkdir build && cd build
        cmake .. $CMAKE_OPTS -DCMAKE_INSTALL_PREFIX=./install
    - name: Build
      run: cd build && make
    - name: Build tests
      run: cd build && make tests
    - name: Run tests
      run: build/tests/tests
    - name: Package
      run: |
        cd build
        make install
        make appimage || (cat appimage.log && false)
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: linux
        path: build/lmms-*.AppImage
  macos:
    name: macos
    runs-on: macos-11
    env:
      CMAKE_OPTS: -DUSE_WERROR=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo
      MAKEFLAGS: -j3
      DEVELOPER_DIR: /Applications/Xcode_11.7.app/Contents/Developer
    steps:
    - name: Check out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Install dependencies
      run: |
        brew install ccache fftw pkg-config libogg libvorbis lame libsndfile \
                     libsamplerate jack sdl libgig libsoundio lilv lv2 stk \
                     fluid-synth portaudio fltk qt5 carla
        npm install -g appdmg
    - name: Configure
      run: |
        mkdir build && cd build
        cmake .. -DCMAKE_INSTALL_PREFIX="../target" \
                 -DCMAKE_PREFIX_PATH="$(brew --prefix qt5)" \
                 $CMAKE_OPTS \
                 -DUSE_WERROR=OFF
    - name: Build
      run: cd build && make
    - name: Build tests
      run: cd build && make tests
    - name: Run tests
      run: build/tests/tests
    - name: Package
      run: |
        cd build
        make install
        make dmg
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: linux
        path: build/lmms-*.dmg
  mingw32:
    name: mingw32
    runs-on: ubuntu-18.04
    container: lmmsci/linux.mingw32:18.04
    env:
      CMAKE_OPTS: -DUSE_WERROR=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo
      MAKEFLAGS: -j2
    steps:
    - name: Update and configure Git
      run: |
        add-apt-repository ppa:git-core/ppa
        apt-get update
        apt-get --yes install git
        git config --global --add safe.directory /__w/lmms/lmms
    - name: Check out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Configure
      run: |
        mkdir build && cd build
        ../cmake/build_win32.sh
    - name: Build
      run: cd build && make
    - name: Build tests
      run: cd build && make tests
    - name: Package
      run: cd build && make package
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: mingw32
        path: build/lmms-*.exe
  mingw64:
    name: mingw64
    runs-on: ubuntu-18.04
    container: lmmsci/linux.mingw64:18.04
    env:
      CMAKE_OPTS: -DUSE_WERROR=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo
      MAKEFLAGS: -j2
    steps:
    - name: Update and configure Git
      run: |
        add-apt-repository ppa:git-core/ppa
        apt-get update
        apt-get --yes install git
        git config --global --add safe.directory /__w/lmms/lmms
    - name: Check out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Configure
      run: |
        mkdir build && cd build
        ../cmake/build_win64.sh
    - name: Build
      run: cd build && make
    - name: Build tests
      run: cd build && make tests
    - name: Package
      run: cd build && make package
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: mingw64
        path: build/lmms-*.exe
